{"version":3,"file":"main.js","mappings":"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","sources":["webpack://form-validation/webpack/bootstrap","webpack://form-validation/webpack/runtime/global","webpack://form-validation/webpack/runtime/publicPath","webpack://form-validation/./src/js/email-validation.js","webpack://form-validation/./src/js/zip-codes.js","webpack://form-validation/./src/js/select-country-validate.js","webpack://form-validation/./src/js/zip-code-validate.js","webpack://form-validation/./src/js/password-validate.js","webpack://form-validation/./src/js/confirm-password-validate.js","webpack://form-validation/./src/js/show-password.js","webpack://form-validation/./src/js/on-submit-validate.js","webpack://form-validation/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const emailValidation = ({\n  emailElement,\n  emailSpanElement,\n  missingValueMsg,\n  invalidEmailMsg,\n}) => {\n  const email = document.querySelector(emailElement);\n  const emailSpan = document.querySelector(emailSpanElement);\n  emailSpan.setAttribute('style', 'color: red;');\n\n  const invalidValue = ({ msg }) => {\n    if (!email.validity.valid) {\n      emailSpan.textContent = msg;\n    }\n  };\n\n  const noValue = ({ msg }) => {\n    if (email.validity.valueMissing) {\n      emailSpan.textContent = msg;\n    }\n  };\n\n  const validValue = () => {\n    if (email.validity.valid) {\n      emailSpan.textContent = '';\n    }\n  };\n\n  const emailCases = () => {\n    invalidValue({ msg: invalidEmailMsg });\n    validValue();\n    noValue({ msg: missingValueMsg });\n  };\n\n  const focusoutEmail = () =>\n    email.addEventListener('focusout', () => {\n      emailCases();\n    });\n\n  return { focusoutEmail };\n};\n\nexport default emailValidation;\n","const zipCodes = {\n  switzerland: {\n    pattern: '^(CH-)?\\\\d{4}$',\n    formatGuide:\n      'Switzerland ZIPs must have exactly 4 digits: e.g. CH-1950 or 1950',\n  },\n  france: {\n    pattern: '^(F-)?\\\\d{5}$',\n    formatGuide:\n      'France ZIPs must have exactly 5 digits: e.g. F-75012 or 75012',\n  },\n  germany: {\n    pattern: '^(D-)?\\\\d{5}$',\n    formatGuide:\n      'Germany ZIPs must have exactly 5 digits: e.g. D-12345 or 12345',\n  },\n  netherlands: {\n    pattern: '^(NL-)?\\\\d{4}\\\\s*([A-RT-Z][A-Z]|S[BCE-RT-Z])$',\n    formatGuide:\n      'Netherland ZIPs must have exactly 4 digits, followed by 2 letters except SA, SD and SS',\n  },\n};\n\nexport default zipCodes;\n","import zipCodes from './zip-codes';\n\nconst selectCountryValidate = ({\n  countryElement,\n  countrySpanElement,\n  didNotSelect,\n  zipCodeInput,\n}) => {\n  const country = document.querySelector(countryElement);\n  const countrySpan = document.querySelector(countrySpanElement);\n  const zipCodeElement = document.querySelector(zipCodeInput);\n\n  // when user leaves the country selection without even selecting an option from the list\n  const didNotSelectAnyCountry = () => {\n    if (country.validity.valueMissing) {\n      countrySpan.textContent = didNotSelect;\n      countrySpan.setAttribute('style', 'color: red;');\n    }\n  };\n\n  const selectedCountry = () => {\n    if (country.validity.valid) {\n      countrySpan.textContent = '';\n      countrySpan.setAttribute('style', 'color: black;');\n\n      // you want to set a pattern for zip code input\n      zipCodeElement.setAttribute(\n        'pattern',\n        `${zipCodes[country.value].pattern}`,\n      );\n    }\n  };\n\n  const countrySelectionCases = () => {\n    didNotSelectAnyCountry();\n    selectedCountry();\n  };\n\n  const focusOutFromCountry = () =>\n    country.addEventListener('focusout', () => {\n      countrySelectionCases();\n    });\n\n  return { focusOutFromCountry };\n};\n\nexport default selectCountryValidate;\n","import zipCodes from './zip-codes';\n\nconst zipCodeValidate = ({\n  zipCodeElement,\n  zipCodeSpanElement,\n  selectedCountry,\n  missingZipCodeMsg,\n  noSelectedCountryMsg,\n}) => {\n  const zipCode = document.querySelector(zipCodeElement);\n  const zipCodeSpan = document.querySelector(zipCodeSpanElement);\n  const selectedCountryElement = document.querySelector(selectedCountry);\n  zipCodeSpan.setAttribute('class', 'zip-code-span');\n\n  const didNotSelectAnyCountry = () => {\n    // tell the user after they type that they need to select country to check wether their zip code is valid or not\n    if (selectedCountryElement.validity.valueMissing) {\n      zipCodeSpan.textContent = noSelectedCountryMsg;\n    }\n  };\n\n  const zipCodeIsMissing = () => {\n    // even if they selected country but didn't input zip code value\n    if (\n      !selectedCountryElement.validity.valueMissing &&\n      zipCode.validity.valueMissing\n    ) {\n      zipCodeSpan.textContent = missingZipCodeMsg;\n    }\n  };\n\n  const zipCodeIsInValid = () => {\n    // tell user that the zipCode that they have input is invalid and doesn't match therefore guide the user to write\n    if (\n      !selectedCountryElement.validity.valueMissing &&\n      !zipCode.validity.valueMissing &&\n      !zipCode.validity.valid\n    ) {\n      zipCodeSpan.textContent =\n        zipCodes[selectedCountryElement.value].formatGuide;\n    }\n  };\n\n  const zipCodeIsValid = () => {\n    if (\n      !selectedCountryElement.validity.valueMissing &&\n      !zipCode.validity.valueMissing &&\n      zipCode.validity.valid\n    ) {\n      zipCodeSpan.textContent = '';\n    }\n  };\n\n  const zipCodeCasesOnFocusout = () => {\n    didNotSelectAnyCountry();\n    zipCodeIsMissing();\n    zipCodeIsInValid();\n    zipCodeIsValid();\n  };\n\n  const focusoutFromZipCode = () =>\n    zipCode.addEventListener('focusout', zipCodeCasesOnFocusout);\n\n  return { focusoutFromZipCode };\n};\n\nexport default zipCodeValidate;\n","// todo: you want to make this code loose and later on do it with the other modules too\n\n// guide the user to input a good password\nconst passwordValidate = ({\n  passwordInput,\n  passwordSpan,\n  missingValueMsg,\n  passwordGuide,\n}) => {\n  const password = document.querySelector(passwordInput);\n  const passwordSpanElement = document.querySelector(passwordSpan);\n  passwordSpanElement.setAttribute('style', 'color: red;');\n\n  // this passwordRegExp does what you want but it doesn't include symbols such as _\n  const passwordRegExp =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/;\n\n  const noValue = () => {\n    // let user to input a value on the field before validating them\n    if (password.validity.valueMissing) {\n      // tell user that this field is required\n      passwordSpanElement.textContent = missingValueMsg;\n    }\n  };\n\n  const invalidPassword = () => {\n    // let user input but check if it satisfies the password regExp\n    if (\n      !password.validity.valueMissing &&\n      !passwordRegExp.test(password.value)\n    ) {\n      passwordSpanElement.textContent = passwordGuide;\n    }\n  };\n\n  const validPassword = () => {\n    if (\n      !password.validity.valueMissing &&\n      passwordRegExp.test(password.value)\n    ) {\n      passwordSpanElement.textContent = '';\n    }\n  };\n\n  const passwordCases = () => {\n    noValue();\n    invalidPassword();\n    validPassword();\n  };\n\n  const focusoutPassword = () =>\n    password.addEventListener('focusout', passwordCases);\n\n  return { focusoutPassword };\n};\n\nexport default passwordValidate;\n","const confirmPasswordValidate = ({\n  confirmInput,\n  confirmSpan,\n  passwordInput,\n  noValue,\n  invalidPassword,\n  notMatch,\n}) => {\n  const passwordRegExp =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,30}$/;\n\n  const spanElement = document.querySelector(confirmSpan);\n  const passwordElement = document.querySelector(passwordInput);\n  const confirmPasswordElement = document.querySelector(confirmInput);\n\n  spanElement.setAttribute('style', 'color: red;');\n\n  const isNoValue = () => {\n    if (confirmPasswordElement.validity.valueMissing) {\n      spanElement.textContent = noValue;\n    }\n\n    if (!confirmPasswordElement.validity.valueMissing) {\n      spanElement.textContent = '';\n    }\n  };\n\n  const isNotValid = () => {\n    if (\n      !confirmPasswordElement.validity.valueMissing &&\n      !passwordRegExp.test(confirmPasswordElement.value)\n    ) {\n      spanElement.textContent = invalidPassword;\n    }\n  };\n\n  const isNotMatch = () => {\n    if (\n      passwordElement.value !== confirmPasswordElement.value &&\n      !passwordElement.validity.valueMissing &&\n      !confirmPasswordElement.validity.valueMissing\n    ) {\n      spanElement.textContent = notMatch;\n    }\n    if (\n      passwordElement.value === confirmPasswordElement.value &&\n      !passwordElement.validity.valueMissing &&\n      !confirmPasswordElement.validity.valueMissing\n    ) {\n      spanElement.textContent = '';\n    }\n  };\n\n  const confirmingPasswordCases = () => {\n    isNoValue();\n    isNotValid();\n    isNotMatch();\n  };\n\n  const focusoutConfirmPassword = () => {\n    const confirmPasswordInputElement = document.querySelector(confirmInput);\n\n    confirmPasswordInputElement.addEventListener(\n      'focusout',\n      confirmingPasswordCases,\n    );\n  };\n  return { focusoutConfirmPassword };\n};\n\nexport default confirmPasswordValidate;\n","import eyeOff from '../images/eye-off-outline.svg';\nimport eye from '../images/eye-outline.svg';\n\nconst showPassword = ({ imageDiv, passwordInput }) => {\n  const passwordElement = document.querySelector(passwordInput);\n\n  const eyeIcon = new Image();\n  const eyeOffIcon = new Image();\n\n  eyeIcon.src = eye;\n  eyeOffIcon.src = eyeOff;\n\n  const imageContainer = document.querySelector(imageDiv);\n  imageContainer.appendChild(eyeOffIcon);\n\n  imageContainer.addEventListener('click', () => {\n    if (passwordElement.type === 'password') {\n      passwordElement.type = 'text';\n      imageContainer.removeChild(eyeOffIcon);\n      imageContainer.appendChild(eyeIcon);\n    } else {\n      passwordElement.type = 'password';\n      imageContainer.removeChild(eyeIcon);\n      imageContainer.appendChild(eyeOffIcon);\n    }\n  });\n\n  return passwordElement;\n};\n\nexport default showPassword;\n","const onSubmitValidate = ({\n  button,\n  email,\n  select,\n  zipCode,\n  password,\n  confirmPassword,\n}) => {\n  const submitBtn = document.querySelector(button);\n  const emailInput = document.querySelector(email);\n  const selectCountry = document.querySelector(select);\n  const zipCodeInput = document.querySelector(zipCode);\n  const userPassword = document.querySelector(password);\n  const userConfirmPassword = document.querySelector(confirmPassword);\n\n  const isEmailValid = () => {\n    if (!emailInput.validity.valid) {\n      emailInput.reportValidity();\n      return 1;\n    }\n    return 0;\n  };\n\n  const didSelectACountry = () => {\n    if (selectCountry.validity.valueMissing) {\n      selectCountry.reportValidity();\n      return 1;\n    }\n    return 0;\n  };\n\n  const isZipCodeValid = () => {\n    if (!zipCodeInput.validity.valid) {\n      zipCodeInput.reportValidity();\n      return 1;\n    }\n    return 0;\n  };\n\n  const isPasswordMatched = () => {\n    if (\n      userPassword.value !== userConfirmPassword.value ||\n      // report validity even when their value is missing\n      (userConfirmPassword.validity.valueMissing &&\n        userPassword.validity.valueMissing)\n    ) {\n      userConfirmPassword.reportValidity();\n      userPassword.reportValidity();\n      return 1;\n    }\n    return 0;\n  };\n\n  const getTotal = (array) => array.reduce((acc, currVal) => acc + currVal, 0);\n\n  const dontSendToServer /** ayiie */ = (e) => {\n    const toSubmit = [\n      isPasswordMatched(),\n      isZipCodeValid(),\n      didSelectACountry(),\n      isEmailValid(),\n    ];\n\n    if (getTotal(toSubmit) > 0) {\n      e.preventDefault();\n      return false;\n    }\n    return true;\n  };\n\n  submitBtn.addEventListener('click', (e) => {\n    dontSendToServer(e);\n  });\n};\n\nexport default onSubmitValidate;\n","import './style/style.css';\nimport emailValidation from './js/email-validation';\nimport selectCountryValidate from './js/select-country-validate';\nimport zipCodeValidate from './js/zip-code-validate';\nimport passwordValidate from './js/password-validate';\nimport confirmPasswordValidate from './js/confirm-password-validate';\nimport showPassword from './js/show-password';\nimport onSubmitValidate from './js/on-submit-validate';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  emailValidation({\n    emailElement: 'input[id=\"email-address\"]',\n    emailSpanElement: 'input[id=\"email-address\"] + span',\n    missingValueMsg: 'This is required!',\n    invalidEmailMsg: 'This is an invalid email!',\n  }).focusoutEmail();\n\n  selectCountryValidate({\n    countryElement: 'select[id=\"select-country\"]',\n    countrySpanElement: 'select[id=\"select-country\"] + span',\n    zipCodeInput: 'input[id=\"zip-code\"]',\n    didNotSelect: 'Select your country from the list',\n  }).focusOutFromCountry();\n\n  zipCodeValidate({\n    zipCodeElement: 'input[id=\"zip-code\"]',\n    zipCodeSpanElement: 'input[id=\"zip-code\"] + span',\n    missingZipCodeMsg: 'This is required!',\n    selectedCountry: 'select[id=\"select-country\"]',\n    noSelectedCountryMsg: 'Select your country first!',\n  }).focusoutFromZipCode();\n\n  passwordValidate({\n    passwordInput: 'input[id=\"user-password\"]',\n    passwordSpan: 'input[id=\"user-password\"] + span',\n    passwordGuide:\n      \"Password should have lowercase and uppercase letters, number, symbol, and minimum of 8 characters and 30 maximum! You don't want to use space! \",\n    missingValueMsg: 'This is required!',\n  }).focusoutPassword();\n\n  confirmPasswordValidate({\n    confirmInput: 'input[id=\"confirm-password\"]',\n    confirmSpan: 'input[id=\"confirm-password\"] + span',\n    passwordInput: 'input[id=\"user-password\"]',\n    noValue: 'This is required!',\n    invalidPassword:\n      \"Password should have lowercase and uppercase letters, number, symbol, and minimum of 8 characters and 30 maximum! You don't want to use space! \",\n    notMatch: 'Passwords do not match',\n  }).focusoutConfirmPassword();\n\n  showPassword({\n    imageDiv: 'span[class=\"user-password\"]',\n    passwordInput: 'input[id=\"user-password\"]',\n  });\n\n  showPassword({\n    imageDiv: 'span[class=\"confirm-password\"]',\n    passwordInput: 'input[id=\"confirm-password\"]',\n  });\n\n  onSubmitValidate({\n    button: 'button[type=\"submit\"]',\n    email: 'input[type=\"email\"]',\n    select: 'select[id=\"select-country\"]',\n    zipCode: 'input[id=\"zip-code\"]',\n    password: 'input[id=\"user-password\"]',\n    confirmPassword: 'input[id=\"confirm-password\"]',\n  });\n});\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","emailElement","emailSpanElement","missingValueMsg","invalidEmailMsg","email","querySelector","emailSpan","setAttribute","emailCases","msg","validity","valid","textContent","invalidValue","valueMissing","noValue","focusoutEmail","addEventListener","switzerland","pattern","formatGuide","france","germany","netherlands","countryElement","countrySpanElement","didNotSelect","zipCodeInput","country","countrySpan","zipCodeElement","countrySelectionCases","value","focusOutFromCountry","zipCodeSpanElement","selectedCountry","missingZipCodeMsg","noSelectedCountryMsg","zipCode","zipCodeSpan","selectedCountryElement","zipCodeCasesOnFocusout","focusoutFromZipCode","passwordInput","passwordSpan","passwordGuide","password","passwordSpanElement","passwordRegExp","passwordCases","focusoutPassword","confirmInput","confirmSpan","invalidPassword","notMatch","spanElement","passwordElement","confirmPasswordElement","confirmingPasswordCases","focusoutConfirmPassword","imageDiv","eyeIcon","Image","eyeOffIcon","imageContainer","appendChild","type","removeChild","button","select","confirmPassword","submitBtn","emailInput","selectCountry","userPassword","userConfirmPassword","reportValidity","reduce","acc","currVal","preventDefault","dontSendToServer"],"sourceRoot":""}